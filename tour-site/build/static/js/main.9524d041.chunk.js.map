{"version":3,"sources":["Loading.js","Tour.js","Tours.js","App.js","index.js"],"names":["Loading","className","Tour","props","useState","readMore","setReadMore","src","image","name","price","info","substring","onClick","removeTour","id","Tours","tourMap","tours","map","tour","key","App","loading","setLoading","setTours","fetchTours","a","fetch","response","json","console","log","useEffect","length","newTours","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAUeA,EARC,WACd,OACE,yBAAKC,UAAU,WACb,4CCmBSC,EAtBF,SAACC,GAAW,IAAD,EACSC,oBAAS,GADlB,mBACfC,EADe,KACNC,EADM,KAEtB,OAEE,6BAASL,UAAU,eACjB,yBAAKM,IAAKJ,EAAMK,QAChB,gCACE,yBAAKP,UAAU,aACb,4BAAKE,EAAMM,MACX,wBAAIR,UAAU,cAAd,IAA6BE,EAAMO,QAGnC,2BAAIL,EAAWF,EAAMQ,KAAT,UAAmBR,EAAMQ,KAAKC,UAAU,EAAE,KAA1C,OAAoD,4BAAQC,QAAS,kBAAMP,GAAaD,KAAYA,EAAW,YAAc,eAEzI,4BAAQJ,UAAU,aAAaY,QAAS,kBAAMV,EAAMW,WAAWX,EAAMY,MAArE,qBCiBKC,EA9BD,SAACb,GAEf,IAAMc,EAAUd,EAAMe,MAAMC,KAAI,SAAAC,GAC9B,OACA,kBAAC,EAAD,CAAMN,WAAYX,EAAMW,WAAYO,IAAKD,EAAKL,GAAIN,KAAMW,EAAKX,KAAME,KAAMS,EAAKT,KAAMH,MAAQY,EAAKZ,MAAOE,MAAOU,EAAKV,WAIpH,OACE,iCACE,yBAAKT,UAAU,SACb,yCACA,yBAAKA,UAAU,eAGjB,6BAAMgB,KC4DGK,MAnEf,WAAe,MAEiBlB,oBAAS,GAF1B,mBAENmB,EAFM,KAEGC,EAFH,OAGYpB,mBAAS,IAHrB,mBAGNc,EAHM,KAGAO,EAHA,KAaPC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBH,GAAW,GADM,kBAGQI,MAjBjB,8CAcS,cAGTC,EAHS,gBAIKA,EAASC,OAJd,OAITZ,EAJS,OAKfM,GAAW,GACXC,EAASP,GACTa,QAAQC,IAAId,GAPG,kDASfM,GAAW,GACXO,QAAQC,IAAR,MAVe,0DAAH,qDAoBhB,OALAC,qBAAU,WACRP,MACA,IAGCH,EAEC,8BACE,kBAAC,EAAD,OAIc,IAAjBL,EAAMgB,OAEL,8BACI,yBAAKjC,UAAU,SACb,6CACA,4BAAQA,UAAU,MAAMY,QAAS,kBAAMa,MAAvC,aAgBR,8BACE,kBAAC,EAAD,CAAOR,MAAOA,EAAOJ,WATN,SAACC,GAClBgB,QAAQC,IAAIjB,GACZ,IAAMoB,EAAWjB,EAAMkB,QAAO,SAAChB,GAAD,OAAUA,EAAKL,KAAOA,KACpDU,EAASU,QC9DbE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9524d041.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1>loading...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from 'react';\r\n\r\nconst Tour = (props) => {\r\n  const [readMore,setReadMore] = useState(false)\r\n  return(\r\n  \r\n    <article className='single-tour'>\r\n      <img src={props.image}/>\r\n      <footer>\r\n        <div className='tour-info'>\r\n          <h4>{props.name}</h4>\r\n          <h4 className='tour-price'>${props.price}</h4>\r\n        </div>\r\n          {/* <p>{props.info}<button>Read More</button></p> */}\r\n          <p>{readMore ? props.info : `${props.info.substring(0,200)}...`}<button onClick={() => setReadMore(!readMore)}>{readMore ? \"show less\" : \" read more\"}</button></p>\r\n          {/* this is a remove button */}\r\n          <button className=\"delete-btn\" onClick={() => props.removeTour(props.id)}>Not Interested</button>   \r\n        \r\n      </footer>\r\n    </article>\r\n   \r\n  )\r\n};\r\n\r\nexport default Tour;\r\n","import React from 'react';\r\nimport Tour from './Tour';\r\n\r\nconst Tours = (props) => {\r\n\r\nconst tourMap = props.tours.map(tour =>{\r\n  return(\r\n  <Tour removeTour={props.removeTour} key={tour.id} name={tour.name} info={tour.info} image ={tour.image} price={tour.price} />\r\n  )\r\n})\r\n// console.log(removeTour)\r\n  return(\r\n    <section>\r\n      <div className='title'>\r\n        <h2>Our Tours</h2>  \r\n        <div className='underline'></div>\r\n      </div>\r\n\r\n      <div>{tourMap}</div>\r\n      {/* <div> */}\r\n        {/* {tours.map((tour) =>{\r\n          return <Tour key={tour.id} name={tour.name} info={tour.info} image ={tour.image} price={tour.price} />\r\n        })} */}\r\n                {/* {tours.map((tour) => {\r\n          return <Tour key={tour.id} {...tour}  />;\r\n        })} */}\r\n      {/* </div> */}\r\n\r\n    </section>\r\n\r\n  )\r\n};\r\n\r\nexport default Tours;\r\n","//the id of this API is not working so the \"Not Interested\" button is not working  \r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport Loading from './Loading'\r\nimport Tours from './Tours'\r\n// import {useNanoid} from 'use-nanoid'\r\n// const Idd = useNanoid()\r\n// console.log(Idd)\r\n// ATTENTION!!!!!!!!!!\r\n// I SWITCHED TO PERMANENT DOMAIN\r\nconst url = 'https://course-api.com/react-tours-project'  //this is an API that we created\r\nfunction App() {\r\n  //we have two states one for loading and one for tours\r\n  const [loading, setLoading] = useState(true)  //true because we always want to load the page at first before data comes from API to UI\r\n  const [tours,setTours] = useState([]);\r\n\r\n  // const fetchTours = async()=>{\r\n  //   setLoading(true)   //this line is to meke sure that Loading is true by default\r\n  //     const response = await fetch(url)\r\n  //     const tours = response.json()\r\n  //     console.log(tours) \r\n  // }\r\n\r\n  //instead of above function we can use try and catch:\r\n  const fetchTours = async()=>{\r\n    setLoading(true)\r\n    try{\r\n      const response = await fetch(url)\r\n      const tours = await response.json()  //this must be go to the tours state\r\n      setLoading(false)\r\n      setTours(tours)\r\n      console.log(tours)\r\n    }catch(error){\r\n      setLoading(false)\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  //we must use useEffect since we want to use API and we have two states to sync between\r\n  useEffect(() => {\r\n    fetchTours();  //we must use ()\r\n  },[])  //receive the API data one time\r\n\r\n  //we can have two retuens one for loading and one for tours\r\n  if(loading){\r\n    return(\r\n      <main>\r\n        <Loading />\r\n      </main>\r\n    );\r\n  }\r\n  if(tours.length === 0){\r\n    return(\r\n      <main>\r\n          <div className='title'>\r\n            <h2>No Tours Left</h2>  \r\n            <button className='btn' onClick={() => fetchTours()}>Refresh</button> \r\n          </div>\r\n      </main>\r\n    )\r\n  }\r\n\r\n  //remove tour should be define here since we need to update the tours state\r\n\r\n  const removeTour = (id) => {\r\n    console.log(id)\r\n    const newTours = tours.filter((tour) => tour.id !== id)\r\n    setTours(newTours)\r\n  }\r\n\r\n  //if loading is not true (false) and we receive API data\r\n  return(\r\n    <main>\r\n      <Tours tours={tours} removeTour={removeTour}/>\r\n    </main>\r\n  ) \r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}